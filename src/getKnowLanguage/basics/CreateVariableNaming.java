package getKnowLanguage.basics;

/**
 * 변수생성 및 이름지정
 *
 */
public class CreateVariableNaming {

	/*
	 * 변수
     * 이전 섹션에서 배웠듯이 객체는 상태를 필드 에 저장합니다.
	 */
	int cadence = 0;
	int speed = 0;
	int gear = 1;
	
	/*
	 * 객체 란 무엇인가? 토론에서 필드에 대해 소개했지만 다음과 같은 몇 가지 질문이 있을 수 있습니다. 
	 * 필드 이름 지정에 대한 규칙과 규칙은 무엇입니까? 게다가 int, 어떤 다른 데이터 유형이 있습니까? 
	 * 필드가 선언될 때 필드를 초기화해야 합니까? 명시적으로 초기화되지 않은 경우 필드에 기본값이 할당됩니까? 
	 * 이 섹션에서 이러한 질문에 대한 답변을 살펴보겠지만, 그 전에 먼저 알아야 할 몇 가지 기술적 차이점이 있습니다. 
	 * Java 프로그래밍 언어에서는 "필드"와 "변수"라는 용어가 모두 사용됩니다. 
	 * 둘 다 종종 같은 것을 참조하는 것처럼 보이기 때문에 이것은 새로운 개발자들 사이에서 혼동을 일으키는 일반적인 원인입니다.
	 * 
	 * Java 프로그래밍 언어는 다음과 같은 종류의 변수를 정의합니다.
	 * -인스턴스 변수(비정적 필드) : 기술적으로 말하면 개체는 개별 상태를 "비정적 필드", 즉 static키워드 없이 선언된 필드에 저장합니다. 
	 *  비정적 필드는 해당 값이 클래스의 각 인스턴스(즉, 각 개체에 대해)에 고유하기 때문에 인스턴스 변수라고도 합니다. 
	 *  한 currentSpeed자전거는 다른 자전거와 독립적입니다 currentSpeed.
	 * -클래스 변수(정적 필드) : 클래스 변수는 static수정자로 선언된 필드입니다. 
	 *  이것은 클래스가 인스턴스화 된 횟수에 관계없이 이 변수의 복사본이 정확히 하나만 있음을 컴파일러에 알려줍니다. 
	 *  특정 종류의 자전거에 대한 기어 수를 정의하는 필드는 static개념적으로 모든 인스턴스에 동일한 수의 기어가 적용되므로 로 표시할 수 있습니다. 
	 *  코드 static int numGears = 6;는 그러한 static필드를 생성합니다. 
	 *  final또한 기어 수가 변경되지 않음을 나타내기 위해 키워드 를 추가할 수 있습니다.
	 * -지역 변수 : 객체가 필드에 상태를 저장하는 것과 유사하게, 메서드는 종종 임시 상태를 지역 변수에 저장합니다. 
	 *  지역 변수 선언 구문은 필드 선언과 유사합니다(예: int count = 0;). 변수를 지역으로 지정하는 특별한 키워드는 없습니다. 
	 *  그 결정은 전적으로 변수가 선언된 위치(메서드의 여는 중괄호와 닫는 중괄호 사이)에서 비롯됩니다. 
	 *  따라서 지역 변수는 선언된 메서드에서만 볼 수 있습니다. 나머지 클래스에서는 액세스할 수 없습니다.
	 * -매개변수 : Bicycle 클래스와 "Hello World!"의 기본 메소드 모두에서 매개변수의 예를 이미 보았습니다 . 애플리케이션. main 메소드의 서명은 public static void main(String[] args). 여기서 args변수는 이 메서드의 매개변수입니다. 기억해야 할 중요한 점은 매개변수는 항상 "필드"가 아닌 "변수"로 분류된다는 것입니다. 이것은 튜토리얼의 뒷부분에서 배우게 될 다른 매개변수 허용 구문(예: 생성자 및 예외 처리기)에도 적용됩니다.
	 */
}
